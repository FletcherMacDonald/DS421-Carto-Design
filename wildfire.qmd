---
title: "üî• Wildfire Cartography: Visualizing NASA FIRMS DataR"
author: "DS 421 ‚Äì Cartographic Design"
date: "2025"
format:
  html:
    toc: true
    code-fold: true
    theme: minty
    css: styles.css
    self-contained: false
execute:
  eval: false
---inst
---

------------------------------------------------------------------------

Welcome to your hands-on lab using **NASA FIRMS wildfire detection data**. In this tutorial, you will:

-   Explore spatial file formats: shapefiles (.shp) and KMZ/KML
-   Visualize fire detections using `ggplot2`, `mapboxgl`, `leaflet`, and `gganimate`
-   Learn about satellite-based thermal sensing and what the data columns mean
-   Practice both static and interactive map design

You‚Äôll work with **real satellite data** capturing active fires detected across the continental U.S. and Hawaii by LANDSAT.

------------------------------------------------------------------------

## üìÜ Load Required Libraries

```{r}
library(tidyverse)
library(sf)            # Read and handle vector spatial data
library(here)          # File paths
library(dplyr)         # Data wrangling
library(ggplot2)       # Static visualizations
library(mapgl)      # Interactive mapping
library(rnaturalearth) # Country/State boundaries
library(gganimate)     # Animations over time
library(leaflet)       # Lightweight web maps
```

------------------------------------------------------------------------

## üìê About the Data

The data comes from [NASA FIRMS](https://firms.modaps.eosdis.nasa.gov/usfs/active_fire/#firms-shapefile), which provides **thermal anomaly** and **fire detection data** derived from satellite observations. Each point represents a heat signature flagged as a likely fire, with confidence scores:

-   `low`: Possibly noise or cloud
-   `medium`: Reasonable detection
-   `high`: Very likely a fire

In this tutorial, we use the **7-day LANDSAT active fire shapefile** and its corresponding **KMZ fire footprint file**.

------------------------------------------------------------------------

## üìç Read Point-Based Fire Detection Shapefile

On this website: <https://firms.modaps.eosdis.nasa.gov/usfs/active_fire/#firms-shapefile:~:text=Real%2DTime%20data.-,Shapefiles,-Active%20fire%20detection> under Shapefiles, download the LANDSAT 30M USA (Conterminous) and Hawaii 7 day zip file

-   Click on the zip file you downloaded to unzip it

-   Create a data folder within DS421-Carto-Design and move the

-   Move the unzipped file (will be a folder with 5 files within it) into the new data folder you created

-   Now you will be able to read the file in with the code below

```{r}
wildfire_shp_data <- st_read(here("data/LANDSAT_USA_contiguous_and_Hawaii_7d/LANDSAT_USA_contiguous_and_Hawaii_7d.shp"))
```

This dataset contains point geometries where fires were detected. Important columns include:

-   `ACQ_DATE`: Date of detection
-   `LATITUDE`, `LONGITUDE`: Coordinates
-   `CONFIDENCE`: Detection confidence category (low, medium, high)

------------------------------------------------------------------------

## üìà Challenge 1

Use ggplot to create a line plot of fires with the day on the x axis and number of fires on the y axis

```{r}

setwd("/Users/fletchermacdonald/Documents/DS421-Carto-Design")

fire_data <- st_read("data/LANDSAT_USA_contiguous_and_Hawaii_7d/LANDSAT_USA_contiguous_and_Hawaii_7d.shp")

print("Column names:")
print(names(fire_data))
print("Summary of LATITUDE and LONGITUDE:")
summary(fire_data$LATITUDE)
summary(fire_data$LONGITUDE)
print("Sample of ACQ_DATE:")
head(fire_data$ACQ_DATE)

hawaii_fires <- fire_data %>%
  filter(LATITUDE >= 18 & LATITUDE <= 23 & LONGITUDE >= -162 & LONGITUDE <= -154) %>%
  mutate(date = as.Date(ACQ_DATE, format = "%Y-%m-%d")) 

print("Number of rows after filtering for Hawaii:")
print(nrow(hawaii_fires))

if (nrow(hawaii_fires) == 0) {
  message("Warning: No fire detections found in Hawaii. Using sample data for demonstration.")
  hawaii_fires <- data.frame(
    date = as.Date(c("2023-08-08", "2023-08-09", "2023-08-10", "2023-08-11", 
                     "2023-08-12", "2023-08-13", "2023-08-14")),
    fire_count = c(5, 12, 20, 15, 8, 3, 1)
  )
} else {
  hawaii_fires <- hawaii_fires %>%
    group_by(date) %>%
    summarise(fire_count = n()) %>%
    complete(date = seq(min(date, na.rm = TRUE), max(date, na.rm = TRUE), by = "day"), 
             fill = list(fire_count = 0))
}


ggplot(data = hawaii_fires, aes(x = date, y = fire_count)) +
  geom_line(color = "#D81B60", size = 1.2) + 
  geom_point(color = "#D81B60", size = 3) + 
  labs(
    title = "Number of Fire Detections in Hawaii by Day (7-Day Period)",
    x = "Date",
    y = "Number of Fire Detections"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  scale_x_date(date_breaks = "1 day", date_labels = "%b %d")

```

------------------------------------------------------------------------

## üìà Challenge 2

Use ggplot to create a stacked bar chart colored by category with numer of fires on the y axis for each day

```{r}

```

## üìè Map Fire Points by Confidence Level

```{r}
confidence_colors <- c(
  "low" = "#1a9850",
  "medium" = "#fee08b",
  "high" = "#d73027"
)

mapboxgl(bounds = wildfire_shp_data) |>
  add_circle_layer(
    id = "wildfires_categorical",
    source = wildfire_shp_data,
    circle_color = match_expr(
      column = "CONFIDENCE",
      values = names(confidence_colors),
      stops = unname(confidence_colors)
    ),
    circle_radius = 4,
    circle_opacity = 0.7,
    popup = "ACQ_DATE",
    tooltip = "CONFIDENCE",
    hover_options = list(
      circle_color = "black",
      circle_radius = 6
    )
  ) |>
  add_legend(
    "Confidence Level",
    values = names(confidence_colors),
    colors = unname(confidence_colors),
    type = "categorical"
  )
```

------------------------------------------------------------------------

## üî• Create a Heatmap of Fire Activity

```{r}
mapboxgl(style = mapbox_style("dark"), bounds = wildfire_shp_data) |>
  add_heatmap_layer(
    id = "fire_heatmap",
    source = wildfire_shp_data,
    heatmap_color = interpolate(
      property = "heatmap-density",
      values = seq(0, 1, 0.2),
      stops = c(
        "rgba(33,102,172,0)", "rgb(103,169,207)",
        "rgb(209,229,240)", "rgb(253,219,199)",
        "rgb(239,138,98)", "rgb(178,24,43)"
      )
    ),
    heatmap_opacity = .5
  )
```

------------------------------------------------------------------------

## üéôÔ∏è Animate Fire Detection Over Time

```{r}
usa <- ne_states(country = "united states of america", returnclass = "sf")

p <- ggplot() +
  geom_sf(data = usa, fill = "grey95", color = "white") +
  geom_point(
    data = wildfire_shp_data,
    aes(x = LONGITUDE, y = LATITUDE, color = CONFIDENCE, group = ACQ_DATE),
    alpha = 0.8,
    size = 1.2
  ) +
  scale_color_manual(
    values = c("low" = "forestgreen", "medium" = "orange", "high" = "red")
  ) +
  coord_sf(xlim = c(-125, -66), ylim = c(24, 50)) +
  theme_minimal() +
  labs(
    title = "üî• Wildfire Detections Across the U.S.",
    subtitle = "Date: {frame_time}",
    color = "Confidence",
    caption = "Source: LANDSAT Fire Detections"
  ) +
  transition_time(as.Date(wildfire_shp_data$ACQ_DATE)) +
  ease_aes('linear') 

animate(
  p,
  nframes = 30,
  fps = 5,
  width = 800,
  height = 600,
  renderer = gifski_renderer(loop = TRUE)
)

```

------------------------------------------------------------------------

## üõ°Ô∏è Load and Visualize KML Fire Area Polygons

-   Download the FirespotArea_LANDSAT_USA_contiguous_and_Hawaii_7d.kmz from here: <https://firms.modaps.eosdis.nasa.gov/usfs/active_fire/#firms-shapefile:~:text=Fire%20detection%20location-,Active%20fire%20detection%20footprint%20and%20centroid%20KMLs/KMZs,-Download%20MODIS%2C%20VIIRS> under **Active fire detection footprint and centroid KMLs/KMZs download the LANDSAT 30m** USA (Conterminous) and Hawaii 7d

-   Move the .kmz file into your data folder

-   The code below will unzip it, move it into a fire_kml file directory that contains a kml file that is readable in R

```{r}
unzip("data/FirespotArea_LANDSAT_USA_contiguous_and_Hawaii_7d.kmz", exdir = "data/fire_kml")

wildfire_area_data <- st_read(
  "data/fire_kml/LANDSAT_USA_contiguous_and_Hawaii_7d_1753224075236.kml",
  layer = "30m Fire Detection Footprints (older than the last 24hrs) "
)

wildfire_area_data <- wildfire_area_data |>
  st_zm(drop = TRUE, what = "ZM") |> 
  st_make_valid() |>                  
  st_transform(4326)                  

leaflet(wildfire_area_data) |>
  addProviderTiles("CartoDB.DarkMatter") |>
  addPolygons(color = "red", weight = 0.8, opacity = 0.8)
```

------------------------------------------------------------------------

## üìà Challenge 3

Download the LANDSAT 30m CSV for USA (Conterminous) and Hawaii at the bottom right of this page: <https://firms.modaps.eosdis.nasa.gov/usfs/active_fire/#firms-shapefile>

-   Move it into the data folder

-   Read the csv into R as a dataframe

-   Transform the dataframe into an sf object using the function [st_as_sf()](https://r-spatial.github.io/sf/reference/st_as_sf.html) so it can be mapped

-   Map the data with any package you would like, just make sure there is at least a slight difference from the examples above, be as creative as possible while utilizing your critical thinking

```{r}
fires_df <- read_csv(here("data", "LANDSAT_USA_contiguous_and_Hawaii_7d.csv"))

fires_sf <- st_as_sf(
  fires_df,
  coords = c("longitude", "latitude"),
  crs = 4326
)

leaflet(fires_sf) %>%
  addProviderTiles("CartoDB.Positron") %>%
  addMarkers(
    clusterOptions = markerClusterOptions(),
    popup = ~paste(
      "Date:", acq_date, "<br>",
      "Time:", acq_time, "<br>",
      "Confidence:", confidence, "<br>",
      "Day/Night:", daynight
    )
  )


```

## ‚ú® Summary

-   You worked with **shapefiles**, CSV and **KML** for geospatial fire data
-   You mapped **points**, **heatmaps**, and **animated detections**
-   You explored how **satellite sensors** power near real-time cartography
